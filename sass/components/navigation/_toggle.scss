/* Variables
--------------------------------------------- */
$mult: 0.8;
$buttonWidth: 72px * $mult; // The width of the button area
$buttonHeight: 72px * $mult; // The height of the button area
$barThickness: 5px * $mult; // The thickness of the button bars
$buttonPad: 14px * $mult; // The left/right padding between button area and bars.
$buttonBarSpace: 9px * $mult; // The spacing between button bars
$borderRadius: $marquee__border-radius; // The lines' border radius
$baseBg: transparent;
$baseColor: map-get($colors, 'yellow');
$activeBg: transparent;
$activeColor: $baseColor;

/* Base styles
--------------------------------------------- */
.c-hamburger {
	background-color: $baseBg;
	z-index: 100;
	overflow: hidden;
	padding: 0;
	width: $buttonWidth;
	height: $buttonHeight;
	border-left: 1px solid map-get($colors, 'darkgray');
	border: none;
	border-top-right-radius: 0;
	border-bottom-right-radius: 2px;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	box-shadow: none;
	overflow: visible;
	text-indent: -9999px;
	font-size: 0;
	cursor: pointer;
	transition: all $buttonTransitionDuration;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;

	&:hover {
		background-color: $activeBg;
	}

	&:focus {
		outline: none;
	}

	&.toggled {
		background-color: $activeBg;

		.menu {
			background-color: $activeColor;

			&::before,
			&::after {
				background-color: $activeColor;
			}
		}

		.label {
			opacity: 0;
		}
	}

	.menu {
		border-radius: $borderRadius;
		background-color: $baseColor;
		position: absolute;
		top: ($buttonHeight / 2) - ($barThickness / 2);
		right: $buttonPad;
		left: $buttonPad;
		display: block;
		height: $barThickness;

		&::before,
		&::after {
			border-radius: $borderRadius;
			background-color: $baseColor;
			position: absolute;
			left: 0;
			display: block;
			width: 100%;
			height: $barThickness;
			content: '';
		}

		&::before {
			top: -($barThickness) - $buttonBarSpace;
		}

		&::after {
			bottom: -($barThickness) - $buttonBarSpace;
		}
	}

	.label {
		@include font__special;
		@include abscenter($y: false);
		bottom: -16px;
		color: map-get($colors, 'yellow');
		display: block;
		font-size: 1.5rem;
		margin: 0;
		overflow: visible;
		opacity: 1;
		text-indent: 0;
		transition: opacity 150ms ease-out;
		width: 100%;
	}
}

/* Toggle styles
--------------------------------------------- */

/**
 * Style 1
 *
 * Rotating hamburger icon (rot), that simply rotates 90 degrees when activated.
 * Nothing too fancy, simple transition.
 */
.c-hamburger--rot {
	.menu {
		transition: transform $buttonTransitionDuration;
	}

	&.toggled {
		.menu {
			transform: rotate(90deg);
		}
	}
}

/**
 * Style 2
 *
 * Hamburger to "x" (htx). Takes on a hamburger shape, bars slide
 * down to center and transform into an "x".
 */
.c-hamburger--htx {
	.menu {
		transition: background 0s $buttonTransitionDuration;

		&::before,
		&::after {
			transition-delay: $buttonTransitionDuration, 0s;
			transition-duration: $buttonTransitionDuration, $buttonTransitionDuration;
		}

		&::before {
			transition-property: top, transform;
		}

		&::after {
			transition-property: bottom, transform;
		}
	}

	&.toggled {
		.menu {
			background: none !important;

			&::before {
				top: 0;
				transform: rotate(45deg);
			}

			&::after {
				bottom: 0;
				transform: rotate(-45deg);
			}

			&::before,
			&::after {
				transition-delay: 0s, $buttonTransitionDuration;
			}
		}
	}
}

/**
 * Style 3
 *
 * Hamburger to left-arrow (htla). Hamburger menu transforms to a left-pointing
 * arrow. Usually indicates an off canvas menu sliding in from left that
 * will be close on re-click of the icon.
 */
.c-hamburger--htla {
	.menu {
		transition: transform $buttonTransitionDuration;

		&::before {
			transition: transform $buttonTransitionDuration,
				width $buttonTransitionDuration, top $buttonTransitionDuration;
			transform-origin: top right;
		}

		&::after {
			transition: transform $buttonTransitionDuration,
				width $buttonTransitionDuration, bottom $buttonTransitionDuration;
			transform-origin: bottom right;
		}
	}

	&.toggled {
		.menu {
			transform: rotate(180deg);

			&::before,
			&::after {
				width: 50%;
			}

			&::before {
				top: 0;
				transform: translateX($buttonWidth / 2 - $buttonPad + $barThickness)
					translateY(($barThickness / 2)) rotate(45deg);
			}

			&::after {
				bottom: 0;
				transform: translateX($buttonWidth / 2 - $buttonPad + $barThickness)
					translateY((-($barThickness) / 2)) rotate(-45deg);
			}
		}
	}
}

/**
 * Style 4
 *
 * Hamburger to right-arrow (htra). Hamburger menu transforms to a
 * right-pointing arrow. Usually indicates an off canvas menu sliding in from
 * right that will be close on re-click of the icon.
 */
.c-hamburger--htra {
	.menu {
		transition: transform $buttonTransitionDuration;

		&::before {
			transition: transform $buttonTransitionDuration,
				width $buttonTransitionDuration, top $buttonTransitionDuration;
			transform-origin: top left;
		}

		&::after {
			transition: transform $buttonTransitionDuration,
				width $buttonTransitionDuration, bottom $buttonTransitionDuration;
			transform-origin: bottom left;
		}
	}

	&.toggled {
		.menu {
			transform: rotate(180deg);

			&::before,
			&::after {
				width: 50%;
			}

			&::before {
				top: 0;
				transform: translateX((-($barThickness)))
					translateY(($barThickness / 2)) rotate(-45deg);
			}

			&::after {
				bottom: 0;
				transform: translateX((-($barThickness)))
					translateY((-($barThickness) / 2)) rotate(45deg);
			}
		}
	}
}
